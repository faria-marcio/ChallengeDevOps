# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  IMAGE_TAG: latest

pool:
  vmImage: ubuntu-latest

steps:
- task: TerraformInstaller@0
  displayName: 'Install Terraform'
  inputs:
    terraformVersion: '4.30.0'

- task: TerraformCLI@0
  displayName: 'Terraform init'
  inputs:
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/challenges/terraform'

- task: TerraformCLI@0
  displayName: 'Terraform apply'
  inputs:
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)/challenges/terraform'
    environmentServiceName: 'aws-fariadevops-marcio'
- task: Docker@2
  displayName: Build an image
  inputs:
    command: build
    dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
    repository: $(AWS_ACCOUNT_ID).dkr.ecr.$(AWS_REGION).amazonaws.com/$(PROJECT_NAME)-ecr
    tags: |
      $(IMAGE_TAG)
- task: ECRPushImage@1
  displayName: 'Push Image'
  inputs:
    awsCredentials: 'aws-fariadevops-marcio'
    regionName: $(AWS_REGION)
    sourceImageName: $(AWS_ACCOUNT_ID).dkr.ecr.$(AWS_REGION).amazonaws.com/$(PROJECT_NAME)-ecr
    sourceImageTag: $(IMAGE_TAG)
    repositoryName: $(PROJECT_NAME)-ecr
    pushTag: $(IMAGE_TAG)
- task: AWSCLI@1
  displayName: 'Update Development ECS Fargate Service'
  inputs:
    awsCredentials: 'aws-fariadevops-marcio'
    regionName: $(AWS_REGION)
    awsCommand: ecs
    awsSubCommand: 'update-service'
    awsArguments: '--cluster $(PROJECT_NAME)  --service $(PROJECT_NAME)-svc --force-new-deployment'
    failOnStandardError: false