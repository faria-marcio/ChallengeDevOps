version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@8.2.1

jobs:
  plan-apply:
    name: Plan IaC - Terraform
    working_directory: /tmp/project
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: terraform init & plan
          command: |
            cd challenges/terraform/
            terraform init -input=false
            terraform plan -out tfapply -var-file dev.tfvars
      - persist_to_workspace:
          root: .
          paths:
            - .
  apply:
    name: Apply IaC - Terraform
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform
          command: |
            cd challenges/terraform/
            terraform apply -auto-approve tfapply
      - persist_to_workspace:
          root: .
          paths:
            - .
  plan-destroy:
    name: Plan Destroy IaC - Terraform
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform create destroy plan
          command: |
            cd challenges/terraform/
            terraform plan -destroy -out tfdestroy -var-file dev.tfvars
      - persist_to_workspace:
          root: .
          paths:
            - .
  destroy:
    name: Apply Destroy IaC - Terraform
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform destroy
          command: |
            cd challenges/terraform/
            terraform apply -auto-approve tfdestroy
  
  update-ecs-service:
    name: Update ECS Service to Use the New ECR Image
    docker:
      - image: amazon/aws-cli:2.11.15
    steps:
      - run:
          name: Update ECS Fargate service
          command: |
            aws ecs update-service --region ap-southeast-2 --cluster dnx-devops-challenge-dev --service dnx-devops-challenge-dev-svc --force-new-deployment

workflows:
  version: 2
  plan_approve_apply:
    jobs:
      - plan-apply
      - hold-apply:
          type: approval
          requires:
            - plan-apply
      - apply:
          requires:
            - hold-apply
      - aws-ecr/build-and-push-image:
          registry-id: AWS_ECR_REGISTRY_ID
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          region: AWS_REGION
          dockerfile: Dockerfile
          path: .
          repo: dnx-devops-challenge-dev-ecr
          tag: latest
          requires:
            - apply
      - update-ecs-service:
          requires:
            - aws-ecr/build-and-push-image
      - plan-destroy:
          requires:
            - apply
      - hold-destroy:
          type: approval
          requires:
            - plan-destroy
      - destroy:
          requires:
            - hold-destroy